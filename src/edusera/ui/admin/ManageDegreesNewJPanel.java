/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package edusera.ui.admin;

import edusera.business.professor.Course;
import edusera.business.professor.CourseCatalog;
import edusera.business.professor.CourseOffering;
import edusera.business.degree.Degree;
import edusera.business.profiles.Person;
import edusera.business.directory.ProfessorDirectory;
import edusera.business.schedule.Semester;
import edusera.business.students.Student;
import edusera.business.directory.StudentDirectory;
import edusera.business.directory.UserDirectory;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import java.nio.charset.StandardCharsets;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import edusera.Business;
import edusera.ui.misc.BaseJPanel;
import java.util.ArrayList;
import javax.swing.ListModel;
import utility.Utility;
import utility.Validations;


/**
 *
 * @author ayush
 */

public class ManageDegreesNewJPanel extends BaseJPanel {

    Degree selectedDegree;
   
    DefaultListModel mainCourseList,coreCourseList, electiveCourseList;
    public ManageDegreesNewJPanel(Business business) {
        super(business);
        initComponents();
        initSetup();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        lblEmail3 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDegree = new javax.swing.JTable();
        lblName4 = new javax.swing.JLabel();
        lblName3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        JelectiveCourseList = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        JmainCourseList = new javax.swing.JList<>();
        lblName5 = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        btnDeleteElective = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDeleteCore = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        btnAddElective = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        btnAddCore = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        JcoreCourseList = new javax.swing.JList<>();
        txtCredits = new javax.swing.JTextField();
        lblName1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(0, 0, 0));
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel1.setFont(new java.awt.Font("STHeiti", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));

        lblEmail3.setFont(new java.awt.Font("STHeiti", 1, 36)); // NOI18N
        lblEmail3.setText("Manage Degree");

        btnSave.setText("Save");
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
        });
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        tblDegree.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Degree"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblDegree);

        lblName4.setText("Core");

        lblName3.setText("Courses:");

        jScrollPane4.setViewportView(JelectiveCourseList);

        jScrollPane1.setViewportView(JmainCourseList);

        lblName5.setText("Electives");

        btnCancel.setText("Cancel");
        btnCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelMouseClicked(evt);
            }
        });
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnDeleteElective.setText("Delete Elective");
        btnDeleteElective.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteElectiveActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateMouseClicked(evt);
            }
        });
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDeleteCore.setText("Delete Core");
        btnDeleteCore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCoreActionPerformed(evt);
            }
        });

        lblName.setText("Name");

        btnAddElective.setText("Add Elective");
        btnAddElective.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddElectiveActionPerformed(evt);
            }
        });

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        btnAddCore.setText("Add Core");
        btnAddCore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddCoreMouseClicked(evt);
            }
        });
        btnAddCore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCoreActionPerformed(evt);
            }
        });

        btnView.setText("View");
        btnView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnViewMouseClicked(evt);
            }
        });
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(JcoreCourseList);

        txtCredits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCreditsActionPerformed(evt);
            }
        });

        lblName1.setText("Credits");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1033, 1033, 1033)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(418, 418, 418)
                                .addComponent(lblEmail3)
                                .addGap(413, 413, 413))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnView)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(137, 137, 137)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblName1)
                                                    .addComponent(lblName))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtName)
                                                    .addComponent(txtCredits, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(lblName3)
                                                        .addGap(38, 38, 38))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(btnDeleteCore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(btnAddCore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(btnAddElective, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(btnDeleteElective, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                .addGap(24, 24, 24)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(20, 20, 20)
                                                        .addComponent(lblName4))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(16, 16, 16)
                                                        .addComponent(lblName5))
                                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(255, 255, 255)
                                        .addComponent(btnSave)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnUpdate)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnCancel)))))))
                .addGap(0, 14182, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(7756, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(7756, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblEmail3)
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCredits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(btnAddCore)
                                .addGap(18, 18, 18)
                                .addComponent(btnAddElective)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDeleteCore)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteElective))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblName4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addComponent(lblName5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(lblName3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdate)
                            .addComponent(btnCancel)
                            .addComponent(btnSave))))
                .addGap(18, 18, 18)
                .addComponent(btnView)
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addContainerGap(549, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(683, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(683, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_formAncestorAdded

    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveMouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        
        String name = txtName.getText();
        String credits = txtCredits.getText();
        
        if(!validateData()){
            JOptionPane.showMessageDialog(this, "Please select a row to update");
            return;
        }   
        
        ListModel coreModel = JcoreCourseList.getModel();
        List<String> allCore = new ArrayList<>();

        for (int i = 0; i < coreModel.getSize(); i++) {
            allCore.add(coreModel.getElementAt(i).toString());
        }

        ListModel electiveModel = JelectiveCourseList.getModel();
        List<String> allElectives = new ArrayList<>();

        for (int i = 0; i < electiveModel.getSize(); i++) {
            allElectives.add(electiveModel.getElementAt(i).toString());
        }
        
        // Save
        saveDegree(name,credits, allCore, allElectives);
        
        // Refresh
        populateTable();
        clearScreen();
        initSetup();

        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelMouseClicked

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        btnSave.setEnabled(true);
        btnUpdate.setEnabled(false);
        resetPage();
        initSetup();

    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseClicked
        // TODO add your handling code here:
                
    }//GEN-LAST:event_btnUpdateMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblDegree.getSelectedRow();
        
        if(selectedRowIndex < 0){

            JOptionPane.showMessageDialog(this, "Please select a row to update");

            } else{

            DefaultTableModel model = (DefaultTableModel) tblDegree.getModel();
            selectedDegree = (Degree)model.getValueAt(selectedRowIndex, 0);
                
            String name = txtName.getText();
            String credits = txtCredits.getText();

            if(!validateData()){
                JOptionPane.showMessageDialog(this, "Please select a row to update");
                return;
            }   

            // Get Core
            DefaultListModel<String> coreModel = (DefaultListModel<String>) JcoreCourseList.getModel();
            List<String> allCore = new ArrayList<>();
            for (int i = 0; i < coreModel.size(); i++) {
                allCore.add(coreModel.getElementAt(i));
            }

            // Get Elective
            DefaultListModel<String> electiveModel = (DefaultListModel<String>) JelectiveCourseList.getModel();
            List<String> allElectives = new ArrayList<>();
            for (int i = 0; i < electiveModel.size(); i++) {
                allElectives.add(electiveModel.getElementAt(i));
            }

            // Save
            updateDegree(selectedDegree, name,credits, allCore, allElectives);

            // Refresh
            populateTable();
            clearScreen();

            JOptionPane.showMessageDialog(this, "Row updated successfully");

            initSetup();
            }
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteCoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCoreActionPerformed
        // TODO add your handling code here:
        String str2 = JcoreCourseList.getSelectedValue();
        if(JcoreCourseList.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(this, "No Data selected");
        } else{
            int value = JcoreCourseList.getSelectedIndex();
            
            mainCourseList.addElement(str2);
            JmainCourseList.setModel(mainCourseList);

            if(coreCourseList.getSize() != 0){
                coreCourseList.removeElementAt(value);
            }
        }

    }//GEN-LAST:event_btnDeleteCoreActionPerformed

    private void btnAddElectiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddElectiveActionPerformed
        // TODO add your handling code here:
        if(JmainCourseList.getSelectedIndex() == -1){
            JOptionPane.showMessageDialog(this, "No data selected here!");
        } else{
            
            int value = JmainCourseList.getSelectedIndex();
            electiveCourseList.addElement(JmainCourseList.getSelectedValue());
            JelectiveCourseList.setModel(electiveCourseList);

            if(mainCourseList.getSize() != 0){
                mainCourseList.removeElementAt(value);
            }
        }

    }//GEN-LAST:event_btnAddElectiveActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnAddCoreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddCoreMouseClicked
        // TODO add your handling code here:
       
    }//GEN-LAST:event_btnAddCoreMouseClicked

    private void btnAddCoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCoreActionPerformed
        // TODO add your handling code here:
        String str2 = JmainCourseList.getSelectedValue();
        if(JmainCourseList.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(this, "No data selected", "Oops..", HEIGHT);
        } else{
            int value = JmainCourseList.getSelectedIndex();
            coreCourseList.addElement(str2);
            JcoreCourseList.setModel(coreCourseList);

            if(mainCourseList.getSize() != 0){
                mainCourseList.removeElementAt(value);
            }
            JmainCourseList.setModel(mainCourseList);
        }
    }//GEN-LAST:event_btnAddCoreActionPerformed

    private void btnViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_btnViewMouseClicked

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblDegree.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Select a degree!");
        }
        DefaultTableModel model = (DefaultTableModel) tblDegree.getModel();
        selectedDegree = (Degree)model.getValueAt(selectedRowIndex, 0);
        txtName.setText(selectedDegree.getTitle());
        txtCredits.setText(selectedDegree.getCreditForGraduation()+"");
        setCourses(selectedDegree);
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);

    }//GEN-LAST:event_btnViewActionPerformed

    private void btnDeleteElectiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteElectiveActionPerformed
        // TODO add your handling code here:
            String str2 = JelectiveCourseList.getSelectedValue();
        if(JelectiveCourseList.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(this, "No Data selected");
        } else{
            int value = JelectiveCourseList.getSelectedIndex();
            mainCourseList.addElement(str2);
            JmainCourseList.setModel(mainCourseList);

            if(electiveCourseList.getSize() != 0){
                electiveCourseList.removeElementAt(value);
            }
            JelectiveCourseList.setModel(electiveCourseList);
        }
        
    }//GEN-LAST:event_btnDeleteElectiveActionPerformed

    private void txtCreditsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCreditsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCreditsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> JcoreCourseList;
    private javax.swing.JList<String> JelectiveCourseList;
    private javax.swing.JList<String> JmainCourseList;
    private javax.swing.JButton btnAddCore;
    private javax.swing.JButton btnAddElective;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDeleteCore;
    private javax.swing.JButton btnDeleteElective;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblEmail3;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblName3;
    private javax.swing.JLabel lblName4;
    private javax.swing.JLabel lblName5;
    private javax.swing.JTable tblDegree;
    private javax.swing.JTextField txtCredits;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    private void initSetup() {   
        mainCourseList = new DefaultListModel<String>();
        coreCourseList = new DefaultListModel<String>();
        electiveCourseList = new DefaultListModel<String>();
        JmainCourseList.setModel(mainCourseList);
        List<Course> master = new ArrayList<>();
        master.addAll(business.getCourseList());
        addToMainCourseList(master);
        populateTable();
    }
      
    private void populateTable() {
    
       DefaultTableModel model = (DefaultTableModel) tblDegree.getModel();
       model.setRowCount(0);
    
    for (Degree degree : business.getDegreeRegistry().getDegrees()) {
         Object[]row = new Object[6];
            row[0]= degree;
     
            //model will add row
            model.addRow(row);
          }
    }
  
    public void clearFields(){
        txtName.setText("");
     
    }

    private void resetPage() {
        populateTable();
        clearFields();
        initialButtonsState();
    }

    private void initialButtonsState() {
      
        btnUpdate.setEnabled(false);
    }


   public boolean checkValidate(){
        return Validations.isStringValid(txtName.getText()) ;
    
    }

    private void setCourses(Degree degree) {
        List<Course> mainCourse = new ArrayList<>(business.getCourseList());
        List<Course> coreCourse = degree.getCore();
        List<Course> electiveCourse = degree.getElective();
        
        for(Course core: coreCourse)
            mainCourse.remove(core);

        for(Course elec: electiveCourse)
            mainCourse.remove(elec);
        
        addToMainCourseList(mainCourse);
        addToCoreCourseList(coreCourse);
        addToElectiveCourseList(electiveCourse);
    }

    private void addToMainCourseList(List<Course> courses){
        mainCourseList.removeAllElements();
        for(Course course: courses){
            mainCourseList.addElement(course.toString());
        }
        JmainCourseList.setModel(mainCourseList);
    }
    
    private void addToCoreCourseList(List<Course> courses){
        for(Course course: courses){
            coreCourseList.addElement(course.toString());
        }
        JcoreCourseList.setModel(coreCourseList);
    }
    
    private void addToElectiveCourseList(List<Course> courses){
        for(Course course: courses){
            electiveCourseList.addElement(course.toString());
        }
        JelectiveCourseList.setModel(electiveCourseList);
    }
    
    private void emptyCoreCourseList(){
        coreCourseList.removeAllElements();
        JcoreCourseList.setModel(coreCourseList);
    }
    
    private void emptyElectiveCourseList(){
        electiveCourseList.removeAllElements();
        JelectiveCourseList.setModel(electiveCourseList);
    }
    
    private boolean validateData(){
        return Validations.isStringValid(txtName.getText()) &&
                Validations.isNumeric(txtCredits.getText());
    }

    private void saveDegree(String name, String credits, List<String> core, List<String> elective) {
        List<Course> coreCourses = business.getCourseListFromStrings(core);
        List<Course> electiveCourses = business.getCourseListFromStrings(elective);
        
        Degree degree = business.getDegreeRegistry().addDegree(Integer.parseInt(credits), name);
        degree.setCore(coreCourses);
        degree.setElective(electiveCourses);
        
        JOptionPane.showMessageDialog(this, "Degree added successfully!");
    }
    
    private void clearScreen(){
        txtName.setText("");
        txtCredits.setText("");
        addToMainCourseList(business.getCourseList());
        emptyCoreCourseList();
        emptyElectiveCourseList();
    }

    private void updateDegree(Degree degree, String name, String credits, List<String> allCore, List<String> allElectives) {
        List<Course> coreCourses = business.getCourseListFromStrings(allCore);
        List<Course> electiveCourses = business.getCourseListFromStrings(allElectives);
        
        degree.setTitle(name);
        degree.setCreditForGraduation(Integer.parseInt(credits));
        degree.setCore(coreCourses);
        degree.setElective(electiveCourses);
        
    }
}











