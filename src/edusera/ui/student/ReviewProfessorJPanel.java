/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package edusera.ui.student;

import edusera.business.professor.Course;
import edusera.business.professor.CourseCatalog;
import edusera.business.professor.CourseOffering;
import edusera.business.directory.ProfessorDirectory;
import edusera.business.students.SeatAssignment;
import edusera.business.schedule.Semester;
import edusera.business.directory.UserDirectory;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import java.nio.charset.StandardCharsets;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import edusera.Business;
import edusera.Business.CourseRating;
import edusera.Business.StudentsAssignments;
import edusera.ui.misc.BaseJPanel;
import utility.Utility;


/**
 *
 * @author ingale.r
 */
public class ReviewProfessorJPanel extends BaseJPanel {

    public ReviewProfessorJPanel(Business business) {
        super(business);
        initComponents();
        initSetup();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudentRating = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("STHeiti", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Review Professor");

        btnSubmit.setBackground(new java.awt.Color(105, 155, 247));
        btnSubmit.setFont(new java.awt.Font("STHeiti", 1, 18)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmit.setText("Save");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        tblStudentRating.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Course Offering", "Rating"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblStudentRating.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblStudentRatingKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblStudentRatingKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblStudentRating);
        if (tblStudentRating.getColumnModel().getColumnCount() > 0) {
            tblStudentRating.getColumnModel().getColumn(0).setResizable(false);
            tblStudentRating.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(280, 280, 280)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 822, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(327, 327, 327)
                        .addComponent(jLabel1)))
                .addContainerGap(14291, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(283, 283, 283)
                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(463, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
     //   Course offered = (Course)listCourse.getSelectedItem();
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void tblStudentRatingKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblStudentRatingKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int selectedRowIndex = tblStudentRating.getSelectedRow();
        
            if(selectedRowIndex < 0)
                JOptionPane.showMessageDialog(this, "Please select a row to update");
            else{
                DefaultTableModel model = (DefaultTableModel) tblStudentRating.getModel();
                // Get Data from table
                CourseRating courseRating = (CourseRating)model.getValueAt(selectedRowIndex, 0);
                Double grade = Double.parseDouble(model.getValueAt(selectedRowIndex, 1).toString());
                // Associate Grade
                try {
                    courseRating.seat.setRating(grade);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
              

            }
        }
    }//GEN-LAST:event_tblStudentRatingKeyPressed

    private void tblStudentRatingKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblStudentRatingKeyReleased

    }//GEN-LAST:event_tblStudentRatingKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblStudentRating;
    // End of variables declaration//GEN-END:variables

    private void initSetup() {
       populateTable();
    }
    
    private void populateTable() {
           DefaultTableModel model = (DefaultTableModel) tblStudentRating.getModel();
            model.setRowCount(0);
  
        List<CourseRating> ls = business.getRatingBySemester(business.getCurrent());

        for (CourseRating courseRating : ls){
            Object[] row = new Object[5];
            row[0] = courseRating;
            row[1] = courseRating.seat.getRating();
            model.addRow(row);
    }
  }
}
